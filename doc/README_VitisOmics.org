#+title: VitisOmics
#+author: Timothée Flutre

# see https://github.com/timflutre/perso/blob/master/emacs
#+latex_header: \setlength{\parindent}{0pt}
#+latex_header: \textwidth 17cm
#+latex_header: \oddsidemargin 0.5cm
#+latex_header: \evensidemargin 0.5cm

* Overview
This document describes the "VitisOmics" project.
This project aims at handling "omics" data in the genus Vitis (e.g. grapevine) in an open and reproducible way.
Nevertheless, it requires some basic knowledge and skills about bioinformatics on GNU/Linux computers.

Such "omics" data are already available from various places, such as URGI, NCBI, EBI, etc; and [[http://www.vitaceae.org/index.php/Genome_Sequencing][several]] [[http://www.vitaceae.org/index.php/Annotation][committes]] from the IGGP (International Grape Genome Program) strive at improving interoperability.
But my attempt, via the usage of [[http://www.git-scm.com/book/en/v2][git]] and [[https://github.com/timflutre/VitisOmics][GitHub]], could prove for the community to be a useful addition to these efforts.

The project directory is organized as advised by Noble ([[http://dx.doi.org/10.1371/journal.pcbi.1000424][PLoS Computational Biology 2009]]).
On any Unix-like system, it is easily done with the following commands:
#+begin_src sh
mkdir -p VitisOmics; cd VitisOmics/
touch AUTHORS COPYING README; mkdir -p doc data src results
#+end_src

On any Unix-like system, the project directory can also be easily compressed and transferred (ignoring large data files):
#+begin_src sh
cd ..; tar -czvf VitisOmics.tar.gz \
--exclude=VitisOmics/data --exclude=VitisOmics/results \
--exclude="*~" --exclude=".*" VitisOmics
#+end_src

In order to concretely promote collaborative editing in a distributed manner, the content of the "VitisOmics" repository should be based on "plain text" files.
As a consequence, this document is written in the [[http://orgmode.org/][org]] format, and can thus be automatically exported into the pdf format, best by [[https://www.gnu.org/software/emacs/][emacs]], but also by [[http://pandoc.org/][pandoc]].

** Contributors

The person roles comply with R's guidelines (The R Journal Vol. 4/1, June 2012).

- Timothée Flutre (cre,aut)
- Gautier Sarah (ctb)

* Data
#+begin_src sh
mkdir -p data; cd data/
#+end_src

TODO: retrieve genome data from other cultivars than PN40024, e.g. Sultanina

** URGI
- https://urgi.versailles.inra.fr/Species/Vitis/Data-Sequences/Genome-sequences

#+begin_src sh
mkdir -p urgi; cd urgi/
../../src/download_urgi.bash
#+end_src

When needed, the script decompresses zip files and compress them again but with gzip instead.

** NCBI
- http://www.ncbi.nlm.nih.gov/genome/401
- ftp://ftp.ncbi.nlm.nih.gov/genomes/Vitis_vinifera/

#+begin_src sh
mkdir -p ncbi; cd ncbi/
../../src/download_ncbi.bash
#+end_src

Note the important file =scaffold_names= which provides the correspondence between original scaffold names (i.e. from the sequencing center) and various NCBI identifiers (RefSeq, GenBank, etc).

** EBI
12X.0 as well as soft-masking by RepeatMasker

#+begin_src sh
mkdir -p ebi; cd ebi/
../../src/download_ebi.bash
#+end_src

* Results
#+begin_src sh
mkdir -p results; cd results/
#+end_src

TODO: compress fasta files with =bgzip= instead of =gzip=

On a computer cluster, indexed files could be copied for usage by everyone, e.g. in =/Genomics/Vitis= if on the CIRAD cluster of the [[http://southgreen.fr/][SouthGreen]] platform.

We need to keep the information about the data source (e.g. URGI or NCBI) because there can be differences in terms of N spacers and additional scaffolds (from Aegilops?) at the NCBI.

** URGI
#+begin_src sh
mkdir -p urgi; cd urgi/
#+end_src

*** Reformat sequence headers for =VITVI_PN40024_12x_v0_chroms_URGI=
Launch script:
#+begin_src sh
ln -s ../../data/urgi/VV_chr12x.fsa.gz .
echo "../../src/reformat_VV_chr12x.bash" \
  | qsub -cwd -j y -V -N reformat_VV_chr12x -q normal.q
#+end_src

Check:
#+begin_src sh
zcat VV_chr12x.fsa.gz | wc -l # 8240706
zcat VV_chr12x.fsa.gz | grep -c ">" # 33
zcat VITVI_PN40024_12x_v0_chroms_URGI.fa.gz | wc -l # 8240706
zcat VITVI_PN40024_12x_v0_chroms_URGI.fa.gz | grep -c ">" # 33
diff <(zcat VV_chr12x.fsa.gz) <(zcat VITVI_PN40024_12x_v0_chroms_URGI.fa.gz)
#+end_src

Only the headers differ, not the sequences, so everything is fine.

Basic stats:
#+begin_src sh
zcat VITVI_PN40024_12x_v0_chroms_URGI.fa.gz | md5sum # eff315994fafe35333462b9595e10ce5
#+end_src

*** Reformat sequence headers for =VITVI_PN40024_12x_v0_scaffolds_EMBL_r102=
Launch script:
#+begin_src sh
ln -s ../../data/urgi/VV_12X_embl_102_Scaffolds.fsa.gz .
echo "../../src/reformat_VV_12X_embl_102_Scaffolds.bash" \
  | qsub -cwd -j y -V -N reformat_VV_12X_embl_102_Scaffolds -q normal.q
#+end_src

Check:
#+begin_src sh
zcat VV_12X_embl_102_Scaffolds.fsa.gz | wc -l # 8091565
zcat VV_12X_embl_102_Scaffolds.fsa.gz | grep -c ">" # 2059
zcat VITVI_PN40024_12x_v0_scaffolds_EMBL_r102.fa.gz | wc -l # 8091565
zcat VITVI_PN40024_12x_v0_scaffolds_EMBL_r102.fa.gz | grep -c ">" # 2059
diff <(zcat VV_12X_embl_102_Scaffolds.fsa.gz) <(zcat VITVI_PN40024_12x_v0_scaffolds_EMBL_r102.fa.gz)
#+end_src

Only the headers differ, not the sequences, so everything is fine.

Basic stats:
#+begin_src sh
zcat VITVI_PN40024_12x_v0_scaffolds_EMBL_r102.fa.gz | md5sum # 4fa2432d7a66c019c7cb41ee4d0cb7bc
#+end_src

*** Reformat sequence headers for =VITVI_PN40024_12x_v0_contigs_EMBL_r102=
TODO

*** Reformat sequence headers for =VITVI_PN40024_12x_v2_chroms_URGI=
Launch script:
#+begin_src sh
ln -s ../../data/urgi/12Xv2_grapevine_genome_assembly.fa.gz .
echo "../../src/reformat_12Xv2_grapevine_genome_assembly.bash" \
  | qsub -cwd -j y -V -N reformat_12Xv2_grapevine_genome_assembly -q normal.q
#+end_src

Check:
#+begin_src sh
zcat 12Xv2_grapevine_genome_assembly.fa.gz | wc -l # 8103449
zcat 12Xv2_grapevine_genome_assembly.fa.gz | grep -c ">" # 20
zcat VITVI_PN40024_12x_v2_chroms_URGI.fa.gz | wc -l # 8103449
zcat VITVI_PN40024_12x_v2_chroms_URGI.fa.gz | grep -c ">" # 20
diff <(zcat 12Xv2_grapevine_genome_assembly.fa.gz) <(zcat VITVI_PN40024_12x_v2_chroms_URGI.fa.gz)
#+end_src

Only the headers differ, not the sequences, so everything is fine.

Basic stats:
#+begin_src sh
zcat VITVI_PN40024_12x_v2_chroms_URGI.fa.gz | md5sum # 4e487c28eaf19ef59b0b6128b73935af
#+end_src

Length of each sequence:
#+begin_src sh
zcat VITVI_PN40024_12x_v2_chroms_URGI.fa.gz \
  | awk 'BEGIN{RS=">"} {split($0,a,"\n"); 
if(length(a)==0)next; 
sum=0; for(i=2;i<=length(a);++i){sum+=length(a[i])}; 
print a[1]": "sum; sumTot+=sum} END{print sumTot}'
#+end_src

| header                                                  | length (bp) |
|---------------------------------------------------------+-------------|
| chr1 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2   |    24233538 |
| chr2 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2   |    18891843 |
| chr3 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2   |    20695524 |
| chr4 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2   |    24711646 |
| chr5 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2   |    25650743 |
| chr6 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2   |    22645733 |
| chr7 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2   |    27355740 |
| chr8 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2   |    22550362 |
| chr9 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2   |    23006712 |
| chr10 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2  |    23503040 |
| chr11 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2  |    20118820 |
| chr12 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2  |    24269032 |
| chr13 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2  |    29075116 |
| chr14 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2  |    30274277 |
| chr15 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2  |    20304914 |
| chr16 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2  |    23572818 |
| chr17 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2  |    18691847 |
| chr18 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2  |    34568450 |
| chr19 Vitis vinifera\vert{}PN40024\vert{}assembly12x.2  |    24695667 |
| chrUkn Vitis vinifera\vert{}PN40024\vert{}assembly12x.2 |    27389308 |
| total                                                   |   486205130 |

*** Format =VITVI_PN40024_12x_v0_chroms_URGI= for BLASTn
TODO: change Vvin to VITVI
#+begin_src sh
../../src/format_Vvin-PN40024-12x-chr_blastn.bash
#+end_src

*** Index =VITVI_PN40024_12x_v0_chroms_URGI= for BWA
Launch:
#+begin_src sh
echo "../../src/bwa_index_VITVI_PN40024_12x_v0_chroms_URGI.bash" \
  | qsub -cwd -j y -V -N bwa_index_VITVI_PN40024_12x_v0_chroms_URGI -q normal.q
#+end_src

*** Index =VITVI_PN40024_12x_v2_chroms_URGI= for BWA
Launch:
#+begin_src sh
echo "../../src/bwa_index_VITVI_PN40024_12x_v2_chroms_URGI.bash" \
  | qsub -cwd -j y -V -N bwa_index_VITVI_PN40024_12x_v2_chroms_URGI -q normal.q
#+end_src

*** Prepare =VITVI_PN40024_12x_v2_chroms_URGI= for SAMtools and Picard
Make an index as well as a SAM header.

Launch:
#+begin_src sh
echo "../../src/samtools-picard_prep_VITVI_PN40024_12x_v2_chroms_URGI.bash" \
  | qsub -cwd -j y -V -N samtools-picard_prep_VITVI_PN40024_12x_v2_chroms_URGI -q normal.q
#+end_src

*** Index =VITVI_PN40024_12x_v0_chroms_URGI= for Bowtie2
Launch:
#+begin_src sh
echo "../../src/bowtie2_index_VITVI_PN40024_12x_v0_chroms_URGI.bash" \
  | qsub -cwd -j y -V -N bowtie2_build_VITVI_PN40024_12x_v0_chroms_URGI -q normal.q
#+end_src

*** Index =VITVI_PN40024_12x_v2_chroms_URGI= for Bowtie2
Launch:
#+begin_src sh
echo "../../src/bowtie2_index_VITVI_PN40024_12x_v2_chroms_URGI.bash" \
  | qsub -cwd -j y -V -N bowtie2_build_VITVI_PN40024_12x_v2_chroms_URGI -q normal.q
#+end_src

*** Index =VITVI_PN40024_12x_v2_chroms_URGI= for Bowtie2 compatible with Tassel
Tassel requires numbers as chromosome identifiers.

Launch:
#+begin_src sh
echo "../../src/bowtie2_index_VITVI_PN40024_12x_v2_chroms_URGI_for_Tassel.bash" \
  | qsub -cwd -j y -V -N bowtie2_build_VITVI_PN40024_12x_v2_chroms_URGI_for_Tassel -q normal.q
#+end_src

*** Translate CRIBI annotations from 12X.0 to 12X.2
Requirement: use or write a script taking as input the 12X.0 GFF3 file as well as the 12.0-12.2 AGP file, and returns as output the 12X.2 GFF3 file

The URGI provides the following AGP file: =golden_path_V2_111113_allChr.csv=.
Unfortunately, after looking at the official [[https://www.ncbi.nlm.nih.gov/assembly/agp/AGP_Specification/][specification]] of the AGP format, the URGI file doesn't seem to be valid, neither for version 1.1, nor 2.2.

TODO: contact URGI

** R/Bioconductor
- http://www.bioconductor.org/
- Huber, W. et al. Orchestrating high-throughput genomic analysis with bioconductor. Nature Methods 12, 115-121 (2015). URL http://dx.doi.org/10.1038/nmeth.3252.

TODO: see [[http://www.bioconductor.org/packages/release/bioc/html/AnnotationHub.html][AnnotationHub]]

*** BSgenome IGGP12Xv2 package
http://bioconductor.org/packages/release/bioc/html/BSgenome.html

Retrieve the sequence data from URGI:
#+begin_src sh
cd results/
mkdir -p make_BSgenome_IGGP12Xv2
cd make_BSgenome_IGGP12Xv2/
ln -s ../../data/urgi/12Xv2_grapevine_genome_assembly.fa.gz .
#+end_src

Split into one chromosome per file (in the headers, discard everything after the first space):
#+begin_src bash
zcat 12Xv2_grapevine_genome_assembly.fa.gz | awk 'BEGIN{RS=">"} {if(NF==0)next; split($0,a,"\n"); split(a[1],b," "); print b[1]; print ">"b[1] > b[1]".fa"; for(i=2;i<length(a);++i){print a[i] >> b[1]".fa"}}'
gzip chr*.fa
#+end_src

Prepare the seed file (=IGGP12Xv2_seed.txt=) by hand as indicated in the [[http://bioconductor.org/packages/release/bioc/vignettes/BSgenome/inst/doc/BSgenomeForge.pdf][vignette]] as well as in the official R [[https://cran.r-project.org/doc/manuals/R-exts.html#The-DESCRIPTION-file][manual]] "Writing R extensions".
Following [[http://dx.doi.org/10.1186/1756-0500-5-494][this article]], I chose the [[http://creativecommons.org/publicdomain/zero/1.0/legalcode][CC0 license]] (present in the R list of licenses in =share/licenses/license.db=).

Forge the target package from the seed file:
#+begin_src sh
echo "date; echo \"library(BSgenome); forgeBSgenomeDataPkg(\\\"IGGP12Xv2_seed.txt\\\")\" | R --vanilla; date" | qsub -cwd -j y -V -N forge_BSgenome -q normal.q
#+end_src

Build the package and check it:
#+begin_src sh
echo "date; R CMD build BSgenome.Vvinifera.URGI.IGGP12Xv2; date" | qsub -cwd -j y -V -N build_BSgenome -q normal.q
echo "date; R CMD check BSgenome.Vvinifera.URGI.IGGP12Xv2_0.1.tar.gz; date" | qsub -cwd -j y -V -N check_BSgenome -q normal.q
#+end_src

The target package is now ready to be installed:
#+begin_src sh
R CMD INSTALL BSgenome.Vvinifera.URGI.IGGP12Xv2_0.1.tar.gz
#+end_src

TODO: contact A.-F. Adam-Blondon (part of IGGP) and other colleagues from INRA to get their feedback

*** BSgenome IGGP12Xv0 package
http://bioconductor.org/packages/release/bioc/html/BSgenome.html

Retrieve the sequence data from NCBI (neglect =unlocalized= and =unplaced= sequences), and change headers into "chr"<id>:
#+begin_src sh
cd results/
mkdir -p make_BSgenome_IGGP12Xv0
cd make_BSgenome_IGGP12Xv0/
ls ../../data/ncbi/Assembled_chromosomes/vvi_ref_12X_chr*.fa.gz | while read f; do name=$(basename $f | sed 's/.fa.gz//' | awk '{split($0,a,"_"); print a[4]}'); echo ${name}; echo ">${name}" > ${name}.fa; zcat $f | grep -v ">" >> ${name}.fa; gzip ${name}.fa; done
#+end_src

TODO: Prepare the seed file (=IGGP12Xv0_seed.txt=) by editing the one used for =IGGP12Xv2=.

*** TxDb CRIBI12Xv0 package
http://www.bioconductor.org/packages/release/bioc/html/GenomicFeatures.html

TODO
